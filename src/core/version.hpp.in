#pragma once

#include <string>
#include "core/serialize.hpp"

#mesondefine VERSION_MAJOR
#mesondefine VERSION_MINOR
#mesondefine VERSION_PATCH
#mesondefine DEBUG

class ApplicationVersion {
public:
    static ApplicationVersion current();

    bool isCompatible(const ApplicationVersion &other) const;

    std::string toString() const;

    template<typename Archive>
    void serialize(Archive& ar, uint32_t const version) {
        ar(cereal::make_nvp("versionMajor", mVersionMajor));
        ar(cereal::make_nvp("versionMinor", mVersionMinor));
        ar(cereal::make_nvp("versionPatch", mVersionPatch));
    }

private:
    int mVersionMajor;
    int mVersionMinor;
    int mVersionPatch;
};

